#!/bin/bash

#====================================================================
# AJPapps - Nuerburgring logger Bash ver.
# 
# Линда Кайе 2009-2017. Посвящается Ариэль
#====================================================================
# 
# Этот скрипт ни чего особого не делает. Он просто скачивает картинку 
# с вэбкамеры Нюрбургринга и сохраняет в указанную папку. Я писала 
# его для себя, чтобы сделать нечто вроде слайд-шоу о жизни 
# знаменитого кольца ^^
# 
# VBScript версия этого скрипта работает только в системе Windows. 
# По историческим причинам она сама имеет две версии:
# 
# 1. WHT ver. Использует WinHTTP Services. Работает только в системе 
#    Windows 2000 и выше. При этом ни чего дополнительно ставить 
#    не нужно.
# 
# 2. HTR ver. Использует мой собственный WinInet класс - 
#    ajpHTTPRequest. Поэтому требует библиотеки 
#    CommonFunctions0301.DLL. Её можно установить с любой моей 
#    программой. Однако работает даже в Windows 98.
# 
# Так же имеется Bash версия, которая работает везде, где есть, 
# собственно, Bash, например, в Linux. Её основные отличия 
# от VBScript версии:
# 
# 1. Загружая картинку, она полагается на wget и его настройки. Это 
#    значит, что загрузчик wget должен быть установлен, настроен 
#    и доступен в системе.
# 
# 2. Скрипт не просто сохраняет картинки, но так же создаёт для них 
#    подкаталоги в формате "YYYY-MM" (например, "2008-02"), таким 
#    образом выполняя их сортировку.
# 
# 3. Помимо каталога для картинок скрипт принимает опциональный 
#    параметр, передающийся в chown в качестве имени пользователя 
#    и группы для создаваемых каталогов. Указать этот параметр можно 
#    только при указании каталога. Если параметр не указан, chown 
#    не выполняется.
# 
# Вот примеры использования скрипта:
# 
# > NuerburgringLoggerHTR.VBS
# > NuerburgringLoggerWHT.VBS "J:\Pics\Logs\"
# > nuerburgringlogger.sh "/home/vanilla/pics/logs/" vanilla:vanilla
# 
# Обратите внимание на сохранение картинки в текущий каталог 
# в первом примере и на Linux путь совместно с именем пользователя 
# и группой в третьем примере. Так же я рекомендую указывать каталог 
# точно во избежание несчастных случаев.
# 
# Лучше всего запланировать запуск скрипта в любом планировщике 
# (даже во встроенном). При этом для начала стоит проверить 
# параметры, которые вы передаёте скрипту, а после того как всё 
# пройдёт успешно, заблокировать вывод сообщений.
# 
# В случае VBScript версий необходимо передать WScript.EXE 
# параметр //b, который будет блокировать появление любых сообщений. 
# Выглядеть это будет так:
# 
# > WScript.EXE //b "H:\NuerburgringLoggerHTR.VBS" "J:\Pics\Logs\"
# 
# В случае Bash версии необходимо перенаправить вывод на NUL или 
# /dev/null. Например, так:
# 
# > nuerburgringlogger.sh /home/vanilla/pics/logs/ > /dev/null
# 
# Внимание! Мне встретилась проблема, когда в Windows XP SP2 
# файрволл Outpost сильно снижал скорость скачивания картинки, 
# а также портил её данные. Проявлялось это только при 
# автоматическом запуске через планировщик Windows. В чём причина 
# такого поведения, я не знаю, но в моём случае помогло обновление 
# файрволла.
# 
# История изменений
# -----------------
# 
# • 23.11.2009
#   Первая версия ^^
# 
# • 14.10.2014
#   [+] Небольшие чистки в коде.
#   [+] Вместо имени скрипта на сервер уходит случайный юзерагент.
#   [+] Вместо CommonFunctions0300.DLL используется 
#       CommonFunctions0301.DLL.
#   [+] Добавлена Bash версия.
# 
# • 4.03.2017
#   [+] Из имён файлов убраны пробелы и подчёркивания.
#   [+] Поправлен вывод Usage в VBScript версиях.
#   [-] Мелкие правки VBScript версий.
#   [+] VBScript версии перекодированы в UTF-16.
#   [+] Bash версия принимает параметры командной строки - 
#       редактирование скрипта теперь не требуется.
#   [+] Bash версия теперь создаёт каталоги рекурсивно.
#   [+] Bash версия теперь выбирает юзерагент, как и VBScript версии.
# 
#====================================================================
# Маленький копирайт
# 
# 1. Программа и исходный код распространяются бесплатно.
# 2. Вы имеете право распространять их на тех же условиях.
# 3. Вы не имеете права использовать имя автора после модификации 
#    исходного кода.
# 4. При этом желательно указывать ссылку на автора оригинальной 
#    версии исходного кода.
# 5. Вы не имеете права на платное распространение исходного кода, 
#    а также программных модулей, содержащих данный исходный код.
# 6. Программа и исходный код распространяются как есть. Автор не 
#    несёт ответственности за любые трагедии или несчастные случаи, 
#    вызванные использованием программы и исходного кода.
# 7. Для любого пункта данного соглашения может быть сделано 
#    исключение с разрешения автора программы.
# 8. По любым вопросам, связанным с данной программой, обращайтесь 
#    по адресу lindaoneesama@gmail.com
# 
# Загружено с http://purl.oclc.org/Linda_Kaioh/Homepage/
#====================================================================

# Получаем аргументы...
if [ "$2" = "" ] ; then
    if [ "$1" = "--help" ] ; then
        echo "Usage: $0 [PATH [USERNAME:GROUP]]"
        echo ""
        echo "PATH - путь к каталогу, куда скрипт будет сохранять картинки."
        echo "       Если не указан, программа будет сохранять в текущий каталог."
        echo ""
        echo "USERNAME - имя пользователя для chown."
        echo ""
        echo "GROUP - имя группы для chown."
        exit
    elif [ "$1" = "" ] ; then
        NR_PATH="."
        USER_NAME=""
    else
        NR_PATH="$1"
        USER_NAME=""
    fi
else
    NR_PATH="$1"
    USER_NAME="$2"
fi

# Создаём "корень" и устанавливаем права...
if [ ! -d "$NR_PATH" ] ; then
    mkdir --parents "$NR_PATH"
    if [ "$USER_NAME" != "" ] ; then
        chown $USER_NAME "$NR_PATH"
    fi
fi

# Теперь определяем подкаталог...
NR_PATH="$NR_PATH/$(date '+%Y-%m')"

# Создаём подкаталог и устанавливаем права...
if [ ! -d "$NR_PATH" ] ; then
    mkdir --parents "$NR_PATH"
    if [ "$USER_NAME" != "" ] ; then
        chown $USER_NAME "$NR_PATH"
    fi
fi

# Теперь опредеяем имя файла и URL. Для читаемости...
NR_FILE_NAME="$NR_PATH/Nuerburgring Log $(date '+%Y-%m-%d %H-%M-%S').jpg"
NR_URL="http://www.nuerburgring.de/fileadmin/webcam/webcam.jpg"

# Юзерагент...
# http://stackoverflow.com/questions/5189913/pick-and-print-one-of-three-strings-at-random-in-bash-script
PREDEFINED_UA[0]="Mozilla/5.0 (Windows NT 5.1; rv:32.0) Gecko/20100101 Firefox/32.0 SeaMonkey/2.29.1"
PREDEFINED_UA[1]="Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0)"
PREDEFINED_UA[2]="Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 6.2; WOW64; Trident/6.0)"
PREDEFINED_UA[3]="Mozilla/5.0 (Windows NT 6.3; WOW64; Trident/7.0; rv:11.0) like Gecko"
PREDEFINED_UA[4]="Opera/9.80 (Windows NT 6.2; WOW64) Presto/2.12.388 Version/12.17"
PREDEFINED_UA[5]="Mozilla/5.0 (Windows NT 6.3; WOW64; rv:30.0) Gecko/20100101 Firefox/30.0"
PREDEFINED_UA[6]="Mozilla/5.0 (Windows NT 6.3; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/36.0.1985.125 Safari/537.36"

# Выбираем случайное значение из массива...
RND=$(( $RANDOM % 7 ))
UA="${PREDEFINED_UA[$RND]}"

# Качаем!
wget "$NR_URL" -O "$NR_FILE_NAME" --user-agent="$UA" --progress=dot --no-verbose
